// Generated by CoffeeScript 1.6.2
(function() {
  var CompanySettings, _ref;

  if ((_ref = window.Hizard) == null) {
    window.Hizard = {};
  }

  CompanySettings = function(postURL, deleteURL, upURL, downURL) {
    var $alert, $input, $inputs, $saveButton, changeArrows, currentData, currentPage, currentUrl, data, displayMessage, field, page, pages, table, _i, _j, _len, _len1;

    $saveButton = $('.save');
    $alert = void 0;
    currentUrl = document.URL;
    pages = ['departments', 'questions', 'stages'];
    data = {
      departments: {
        valueNames: ['id', 'name']
      },
      questions: {
        valueNames: ['id', 'name', 'type_field']
      },
      stages: {
        valueNames: ['id', 'name']
      }
    };
    currentPage = void 0;
    for (_i = 0, _len = pages.length; _i < _len; _i++) {
      page = pages[_i];
      if (currentUrl.indexOf(page) !== -1) {
        currentPage = page;
      }
    }
    if (!currentPage) {
      return;
    }
    currentData = data[currentPage];
    $inputs = (function() {
      var _j, _len1, _ref1, _results;

      _ref1 = currentData.valueNames;
      _results = [];
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        field = _ref1[_j];
        _results.push($('.form-' + field));
      }
      return _results;
    })();
    table = new List('sort-table', {
      valueNames: currentData.valueNames
    });
    for (_j = 0, _len1 = $inputs.length; _j < _len1; _j++) {
      $input = $inputs[_j];
      $input.focus(function() {
        $input.removeClass('error');
        return $input.next('small').remove();
      });
      $input.keypress(function(event) {
        var keycode;

        keycode = (event.keyCode ? event.keyCode : event.which);
        if (keycode === 13) {
          $saveButton.click();
          event.preventDefault();
          return event.stopPropagation();
        }
      });
    }
    $('body').on('click', '.edit', function(e) {
      var i, itemId, itemValues, value, _k, _len2;

      itemId = $(this).closest('tr').find('.id').text();
      itemValues = table.get('id', itemId).values();
      for (i = _k = 0, _len2 = $inputs.length; _k < _len2; i = ++_k) {
        $input = $inputs[i];
        value = itemValues[currentData.valueNames[i]];
        if ($input.is('select')) {
          value = $input.find('option:contains("' + value + '")').val();
        }
        $input.val(value);
      }
      return $inputs[$inputs.length - 1].focus();
    });
    $saveButton.click(function() {
      var i, isUpdate, object, _k, _len2;

      isUpdate = true;
      object = {};
      for (i = _k = 0, _len2 = $inputs.length; _k < _len2; i = ++_k) {
        $input = $inputs[i];
        object[currentData.valueNames[i]] = $input.val();
      }
      if (!object.id) {
        isUpdate = false;
        delete object.id;
      }
      if (!object.name) {
        return;
      }
      return $.post(postURL, object, function(data) {
        var $error, error, item, _l, _len3, _len4, _len5, _m, _n;

        if (data.result === 'error') {
          for (_l = 0, _len3 = $inputs.length; _l < _len3; _l++) {
            $input = $inputs[_l];
            $input.addClass('error');
          }
          $error = $('<small>').addClass('error');
          for (error in data.errors) {
            $error.text(data.errors[error]);
          }
          $inputs[$inputs.length - 1].after($error);
          if (isUpdate) {
            item = table.get('id', object.id).values();
            for (i = _m = 0, _len4 = $inputs.length; _m < _len4; i = ++_m) {
              $input = $inputs[i];
              $input.val(item[currentData.valueNames[i]]);
            }
          }
        } else {
          if (currentPage === 'questions') {
            object.type_field = $('.form-type_field  option:selected').text();
          }
          for (_n = 0, _len5 = $inputs.length; _n < _len5; _n++) {
            $input = $inputs[_n];
            $input.val('');
          }
          object.id = data.id;
          if (isUpdate) {
            item = table.get('id', data.id);
            item.values(object);
          } else {
            if (table.items.length === 0) {
              location.reload();
            }
            table.add(object);
            if (currentPage === 'stages') {
              changeArrows(object);
            }
          }
        }
        if ($alert) {
          $alert.remove();
        }
        return displayMessage(data.result, data.message);
      });
    });
    displayMessage = function(type, message) {
      $('div[class^="alert-"]').remove();
      $alert = $('<div>');
      $alert.addClass('alert-' + type);
      $alert.data('alert', 'js');
      $alert.html(message + '<a href=\'#\' class=\'close\'>&times;</a>');
      return $alert.prependTo('.container');
    };
    $('body').on('click', 'a.delete-link', function() {
      var $tr, id, link, name, refUrl, url;

      link = $(this);
      $tr = link.closest('tr');
      refUrl = deleteURL;
      name = $tr.find('.name').text();
      id = $tr.find('.id').text();
      url = refUrl.replace('8888', id);
      $('#delete-confirm-modal').foundation('reveal', 'open');
      $('#delete-confirm-modal #object-name').text(name);
      return $('#delete-confirm-modal #confirm-delete-link').attr('href', url);
    });
    $('body').on('click', 'a#cancel-link', function() {
      return $('#delete-confirm-modal').foundation('reveal', 'close');
    });
    $('body').on('click', '.close', function() {
      return $(this).parent().remove();
    });
    return changeArrows = function() {
      var $last, $new, $table, itemId, url;

      $table = $('#sort-table');
      $last = $table.find('tr:nth-last-child(2)');
      itemId = $last.find('.id').text();
      url = downURL.replace(0, itemId);
      $last.find('td:first').html('<a href=\'' + url + '\'}\'><i class=\'icon-arrow-down icon-2x\'></i></a>');
      $new = $table.find('tr:last');
      itemId = $new.find('.id').text();
      url = upURL.replace(0, itemId);
      $new.find('td:nth-child(2)').html('<a href=\'' + url + '\'}\'><i class=\'icon-arrow-up icon-2x\'></i></a>');
      return $new.find('td:first').html('');
    };
  };

  window.Hizard.CompanySettings = CompanySettings;

}).call(this);
